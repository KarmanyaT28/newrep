import io
from django.template.loader import render_to_string
from django.http import HttpResponse
from docx import Document
from bs4 import BeautifulSoup

def download_preview_as_word(request, intake_form_id):
    # Render preview_form.html with necessary context data
    html_string = render_to_string('preview_form.html', {'form_id': intake_form_id})

    # Parse the HTML using BeautifulSoup
    soup = BeautifulSoup(html_string, 'html.parser')

    # Create a Word document
    doc = Document()
    doc.add_heading('Form Preview', 0)

    # Iterate through the HTML and extract the text to add to the Word document
    for element in soup.find_all(['h1', 'h2', 'p', 'table']):
        if element.name == 'h1':
            doc.add_heading(element.get_text(), level=1)
        elif element.name == 'h2':
            doc.add_heading(element.get_text(), level=2)
        elif element.name == 'p':
            doc.add_paragraph(element.get_text())
        elif element.name == 'table':
            table = doc.add_table(rows=1, cols=len(element.find_all('th')))
            hdr_cells = table.rows[0].cells
            for idx, th in enumerate(element.find_all('th')):
                hdr_cells[idx].text = th.get_text()
            for row in element.find_all('tr')[1:]:
                row_cells = table.add_row().cells
                for idx, td in enumerate(row.find_all('td')):
                    row_cells[idx].text = td.get_text()

    # Prepare the document for download
    buffer = io.BytesIO()
    doc.save(buffer)
    buffer.seek(0)

    response = HttpResponse(buffer, content_type='application/vnd.openxmlformats-officedocument.wordprocessingml.document')
    response['Content-Disposition'] = f'attachment; filename="Form_{intake_form_id}.docx"'

    return response
