
To allow users to remove an entry in the edit_entries.html page, we can add a delete button next to each entry in the table. When the button is clicked, it will trigger a request to remove the specific entry from the database.

Here's how you can implement this:

Steps to Implement Entry Removal:
Update edit_entries.html: Add a delete button next to each entry.
Update views.py: Add a view to handle the deletion of an entry from the database.
Update urls.py: Add a URL pattern to handle the delete action.
1. Update edit_entries.html with a Delete Button:
Add a "Delete" button next to each entry in the table. The delete button will call the delete_entry view with the id of the entry to be deleted.

html
Copy code
<!DOCTYPE html>
<html>
<head>
    <title>Edit Entries for {{ app_name }}</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            padding: 20px;
        }
        .navbar {
            background-color: #333;
            overflow: hidden;
        }
        .navbar a {
            float: left;
            display: block;
            color: white;
            text-align: center;
            padding: 14px 20px;
            text-decoration: none;
        }
        .navbar a:hover {
            background-color: #ddd;
            color: black;
        }
        h1 {
            text-align: center;
            color: #4CAF50;
        }
        .table-container {
            display: flex;
            justify-content: center;
            align-items: center;
            margin-top: 30px;
        }
        table {
            width: 90%;
            border-collapse: collapse;
            background-color: white;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }
        table, th, td {
            border: 1px solid #ddd;
        }
        th, td {
            padding: 10px;
            text-align: left;
        }
        th {
            background-color: #f2f2f2;
            font-weight: bold;
        }
        input[type="text"] {
            width: 100%;
            padding: 8px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }
        button {
            padding: 10px 20px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            margin-top: 20px;
            display: block;
            margin-left: auto;
            margin-right: auto;
        }
        button:hover {
            background-color: #45a049;
        }
        .delete-button {
            background-color: #ff4c4c;
            color: white;
            border: none;
            padding: 5px 10px;
            border-radius: 5px;
            cursor: pointer;
        }
        .delete-button:hover {
            background-color: #e60000;
        }
        .view-files {
            margin-top: 20px;
            text-align: center;
        }
        .generate-csv {
            text-align: center;
            margin-top: 20px;
        }
        .generate-csv a {
            text-decoration: none;
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border-radius: 5px;
        }
        .generate-csv a:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>

    <!-- Navbar -->
    <div class="navbar">
        <a href="/">Dashboard</a>
    </div>

    <h1>Edit Entries for {{ app_name }}</h1>

    <!-- Form to Add New Entries -->
    <form method="POST">
        {% csrf_token %}
        <div class="table-container">
            <table>
                <thead>
                    <tr>
                        <th>Secure Application Name</th>
                        <th>Application MUI</th>
                        <th>Secure Environment</th>
                        <th>Secure Role Name</th>
                        <th>Member Identifier</th>
                        <th>Member Identifier Type</th>
                        <th>Database Name</th>
                        <th>Batch Role or Support Team Member</th>
                        <th>Restricted to IDs</th>
                        <th>Viewpoint Role</th>
                        <th>Role Complete</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td><input type="text" name="Secure_Application_Name" required></td>
                        <td><input type="text" name="Application_MUI" required></td>
                        <td><input type="text" name="Secure_Environment" required></td>
                        <td><input type="text" name="Secure_Role_Name" required></td>
                        <td><input type="text" name="Member_Identifier" required></td>
                        <td><input type="text" name="Member_Identifier_Type" required></td>
                        <td><input type="text" name="Database_Name"></td>
                        <td><input type="text" name="Batch_Role_or_Support_Team_Member"></td>
                        <td><input type="text" name="Restricted_to_IDs"></td>
                        <td><input type="text" name="Viewpoint_Role"></td>
                        <td><input type="text" name="Role_Complete"></td>
                        <td></td>
                    </tr>
                </tbody>
            </table>
        </div>

        <button type="submit">Add Entry</button>
    </form>

    <!-- Section to View and Delete Existing Files -->
    <div class="view-files">
        <h2>View and Delete Existing Entries for {{ app_name }}</h2>
        <div class="table-container">
            <table>
                <thead>
                    <tr>
                        <th>Secure Application Name</th>
                        <th>Application MUI</th>
                        <th>Secure Environment</th>
                        <th>Secure Role Name</th>
                        <th>Member Identifier</th>
                        <th>Member Identifier Type</th>
                        <th>Database Name</th>
                        <th>Batch Role or Support Team Member</th>
                        <th>Restricted to IDs</th>
                        <th>Viewpoint Role</th>
                        <th>Role Complete</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    {% for entry in entries %}
                    <tr>
                        <td>{{ entry.1 }}</td>
                        <td>{{ entry.2 }}</td>
                        <td>{{ entry.3 }}</td>
                        <td>{{ entry.4 }}</td>
                        <td>{{ entry.5 }}</td>
                        <td>{{ entry.6 }}</td>
                        <td>{{ entry.7 }}</td>
                        <td>{{ entry.8 }}</td>
                        <td>{{ entry.9 }}</td>
                        <td>{{ entry.10 }}</td>
                        <td>{{ entry.11 }}</td>
                        <td>
                            <form method="POST" action="{% url 'delete_entry' entry.0 app_name %}">
                                {% csrf_token %}
                                <button type="submit" class="delete-button">Delete</button>
                            </form>
                        </td>
                    </tr>
                    {% endfor %}
                </tbody>
            </table>
        </div>
    </div>

    <!-- Button to Generate CSV -->
    <div class="generate-csv">
        <a href="/generate_csv/{{ app_name }}/">Generate CSV</a>
    </div>

</body>
</html>
Changes in edit_entries.html:
Delete Button: A "Delete" button has been added next to each entry. When clicked, it submits a form that posts the entry's ID (entry.0 corresponds to the primary key id in the database) and calls the delete_entry view.
Actions Column: A new "Actions" column has been added for the delete functionality.
2. Update views.py with delete_entry Function:
python
Copy code
# View to delete an entry
def delete_entry(request, entry_id, app_name):
    conn = connect_db()
    cursor = conn.cursor()

    # Delete the specific entry by ID
    delete_query = "DELETE FROM sync_config WHERE id=%s"
    cursor.execute(delete_query, (entry_id,))
    conn.commit()

    return redirect(f'/edit_entries/{app_name}/')
Explanation:
delete_entry: This view will be triggered when the "Delete" button is clicked. It deletes the entry from the sync_config table by its ID and then redirects the user back to the edit_entries page for the selected application.
3. Update urls.py:
python
Copy code
from django.urls import path
from . import views

urlpatterns = [
    path('', views.dashboard, name='dashboard'),
    path('edit_entries/<str:app_name>/', views.edit_entries, name='edit_entries'),
    path('generate_csv/<str:app_name>/', views.generate_csv, name='generate_csv'),
    path('delete_entry/<int:entry_id>/<str:app_name>/', views.delete_entry





