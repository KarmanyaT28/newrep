import io
from docx import Document
from django.http import HttpResponse
from django.db import connection
from docx.shared import Pt
from docx.enum.text import WD_PARAGRAPH_ALIGNMENT

def download_form(request, intake_form_id):
    # SQL query to fetch form data
    query = """
    SELECT * FROM intake_form
    WHERE id = %s
    """
    
    with connection.cursor() as cursor:
        cursor.execute(query, [intake_form_id])
        form_data = cursor.fetchone()
    
    if not form_data:
        return HttpResponse("Form not found.", status=404)

    # Create a Word document
    doc = Document()

    # Custom styling: setting title, font, and alignment for the heading
    heading = doc.add_heading('Intake Form', level=0)
    heading.alignment = WD_PARAGRAPH_ALIGNMENT.CENTER

    # Apply custom styling to the heading
    run = heading.runs[0]
    run.font.size = Pt(24)
    run.bold = True

    # Add a line break for spacing
    doc.add_paragraph()

    # Assuming the form_data has all the fields in the correct order

    # Fields for Application Details Form
    doc.add_paragraph('Application Details Form:', style='Heading 1')
    fields_application_details = [
        ("Form ID", form_data[0]),
        ("List of Applications", form_data[1]),
        ("Application ID", form_data[2]),
        ("Application Name", form_data[3]),
        ("Owner", form_data[4]),
        ("Creation Date", form_data[5])
    ]

    # Fields for Secure Role Form
    doc.add_paragraph('Secure Role Form:', style='Heading 1')
    fields_secure_role = [
        ("Secure Role ID", form_data[6]),
        ("Role Name", form_data[7]),
        ("Role Description", form_data[8]),
        ("Role Type", form_data[9]),
        ("Access Level", form_data[10]),
        ("Owner", form_data[11]),
        ("Request Date", form_data[12])
    ]

    # Fields for Role Modification Form
    doc.add_paragraph('Role Modification Form:', style='Heading 1')
    fields_role_modification = [
        ("Modification ID", form_data[13]),
        ("Current Role", form_data[14]),
        ("Requested Modifications", form_data[15]),
        ("Reason for Modification", form_data[16]),
        ("Request Date", form_data[17]),
        ("Owner", form_data[18])
    ]

    # Fields for Data Request Form
    doc.add_paragraph('Data Request Form:', style='Heading 1')
    fields_data_request = [
        ("Data Request ID", form_data[19]),
        ("Requested Data", form_data[20]),
        ("Purpose", form_data[21]),
        ("Request Date", form_data[22]),
        ("Owner", form_data[23]),
        ("Approval Status", form_data[24])
    ]

    # Fields for Host Request Form
    doc.add_paragraph('Host Request Form:', style='Heading 1')
    fields_host_request = [
        ("Host Request ID", form_data[25]),
        ("Requested Host", form_data[26]),
        ("Purpose", form_data[27]),
        ("Request Date", form_data[28]),
        ("Owner", form_data[29]),
        ("Approval Status", form_data[30])
    ]

    # Fields for Group Request Form
    doc.add_paragraph('Group Request Form:', style='Heading 1')
    fields_group_request = [
        ("Group Request ID", form_data[31]),
        ("Requested Group", form_data[32]),
        ("Group Purpose", form_data[33]),
        ("Request Date", form_data[34]),
        ("Owner", form_data[35]),
        ("Approval Status", form_data[36])
    ]

    # Add fields to the document with styling
    all_fields = [
        fields_application_details, 
        fields_secure_role, 
        fields_role_modification,
        fields_data_request, 
        fields_host_request, 
        fields_group_request
    ]

    # Iterate through each form's fields and add to document
    for field_set in all_fields:
        for field_name, field_value in field_set:
            para = doc.add_paragraph()
            run = para.add_run(f"{field_name}: ")
            run.bold = True
            run.font.size = Pt(12)

            # Add field value
            run = para.add_run(str(field_value))
            run.font.size = Pt(12)

            # Add a line break after each entry
            doc.add_paragraph()

    # Prepare the document for download
    buffer = io.BytesIO()
    doc.save(buffer)
    buffer.seek(0)

    response = HttpResponse(buffer, content_type='application/vnd.openxmlformats-officedocument.wordprocessingml.document')
    response['Content-Disposition'] = f'attachment; filename=Intake_Form_{intake_form_id}.docx'

    return response
